name: Test and release

# Run the workflow when a Pull Request is opened or when changes are pushed to master on 'xdy/twodsix-foundryvtt' (i.e. don't run on forks)
on:
  pull_request:
  push:
    branches: [ master]

#TODO Parse out these, for now they're hardcoded.
env:
  package_type: system
  node_version: 20

jobs:
  release:
    # Only release on push to master on xdy/twodsix-foundryvtt
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master') && github.repository == 'xdy/twodsix-foundryvtt'
    runs-on: ubuntu-latest
    ## Waits for test jobs for each Node.js version to complete
    #needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install
        run: npm install

      - name: Build
        run: npm run build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      - name: Send Webhook Notification
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: bash src/scripts/discord.sh $WEBHOOK_URL
        shell: bash
        
      - name: Get Module ID
        id: moduleID
        uses: notiz-dev/github-action-json-property@release
        with:
          path: "./dist/${{ env.package_type }}.json"
          prop_path: "id"

      - name: Get mininum
        id: minimum
        uses: notiz-dev/github-action-json-property@release
        with:
          path: "./dist/${{ env.package_type }}.json"
          prop_path: "compatibility.minimum"

      - name: Get verified
        id: verified
        uses: notiz-dev/github-action-json-property@release
        with:
          path: "./dist/${{ env.package_type }}.json"
          prop_path: "compatibility.verified"

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Submit package to FoundryVTT Package Release API
        run: |
          curl -X POST "https://api.foundryvtt.com/_api/packages/release_version/" \
            -H "Content-Type: application/json" \
            -H "Authorization: ${{ secrets.FOUNDRYVTT_RELEASE_TOKEN }}" \
            -d '{
              "id": "twodsix",
              "dry-run": false,
              "release": {
                "version": "${{ steps.package-version.outputs.current-version}}",
                "manifest": "https://github.com/${{ github.repository }}/releases/latest/download/system.json",
                "notes": "https://github.com/${{ github.repository }}/blob/master/CHANGELOG.md",
                "compatibility": {
                  "minimum": "${{ steps.minimum.outputs.prop }}",
                  "verified": "${{ steps.verified.outputs.prop }}",
                  "maximum": ""
                }
              }
            }'
